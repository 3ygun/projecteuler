package p1to10

import "fmt"

/**

Even Fibonacci numbers


Each new term in the Fibonacci sequence is generated by adding the previous two terms. By starting with 1 and 2, the first 10 terms will be:

1, 2, 3, 5, 8, 13, 21, 34, 55, 89, ...

By considering the terms in the Fibonacci sequence whose values do not exceed four million, find the sum of the even-valued terms.

**/
func Question2() {
	fmt.Printf("\tQ2: %d", fib(1, 2))
}

var CUT_OFF int64 = 4000000

func fib(a int64, b int64) int64 {
	if b > CUT_OFF {
		return even(a) + even(b)
	} else {
		return even(a) + fib(b, a+b)
	}
}

func even(num int64) int64 {
	if num%2 == 0 {
		return num
	} else {
		return 0
	}
}
